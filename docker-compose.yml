version: '3'
services:
  python_publisher:
    container_name: python_publisher
    build:
      context: ./
      dockerfile: docker/python_publisher/Dockerfile
    volumes:
      - ./python_app:/var/www/python_publisher
    working_dir: /var/www/python_publisher
    networks:
      - iot-network

  mosquitto:
    container_name: mosquitto_container
    image: eclipse-mosquitto:1.6.10
    restart: unless-stopped
    volumes:
      - ./mosquitto/config:/mosquitto/config/
    ports:
      - '8883:8883'
    networks:
      iot-network:
          ipv4_address: 172.16.210.5

  python_app:
    container_name: python_app
    build:
      context: ./
      dockerfile: docker/python_app/Dockerfile
    volumes:
      - ./python_app:/var/www/python_app
    working_dir: /var/www/python_app
    command: /entrypoint.sh
    ports:
      - '8222:8200'
    depends_on:
      - mongo_db
    networks:
      - iot-network

  redis:
    image: "redis:alpine"
    restart: always
    expose:
      - '6379'
    ports:
      - '6379:6379'
    networks:
      - iot-network

  mongo_db:
    platform: linux/x86_64
    image: mongo:latest
    container_name: mongo_db
    restart: unless-stopped
    tty: true
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - iot-network
    healthcheck:
      test: "exit 0"

volumes:
  mongodb_data_container:

networks:
  iot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.210.0/24